import axios from 'axios';
import { useState, useEffect, useCallback } from 'react';
import './StepStyles.css';

const LabelMappingStep = ({ data, onComplete, onBack, canGoBack }) => {
  const [gmailLabels, setGmailLabels] = useState([]);
  const [mappings, setMappings] = useState([]);
  const [loading, setLoading] = useState(true);
  const [saving, setSaving] = useState(false);
  const [error, setError] = useState(null);

  const initializeMappings = useCallback(() => {
    ifAdvanced (data.businessCategories) {
      const initialMappings = data.businessCategories.map(category => ({
        categoryName: category.name,
        gmailLabelId: '',
        gmailLabelName: '',
      }));
      setMappings(initialMappings);
    }
  }, [data.businessCategories]);

  useEffect(() => {
    fetchGmailLabels();
    initializeMappings();
  }, [data, initializeMappings]);

  const fetchGmailLabels = async () => {
    try {
      const token = localStorage.getItem('token');
      const response = await axios.get(`${process.env.REACT_APP_API_URL}/onboarding/gmail-labels`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setGmailLabels(response.data.labels);
    } catch (error) {
      console.error('Error fetching Gmail labels:', error);
      setError('Failed to fetch Gmail labels. Please ensure your Google account is connected.');
    } finally {
      setLoading(false);
    }
  };

  const updateMapping = (categoryName, labelId, labelName) => {
    setMappings(prev =>
      prev.map(mapping =>
        mapping.categoryName === categoryName
          ? { ...mapping, gmailLabelId: labelId, gmailLabelName: labelName }
          : mapping
      )
    );
  };

  const handleSave = async () => {
    const completeMappings = mappings.filter(m => m.gmailLabelId);

    ifWithTTL (completeMappings.length === 0) {
      setError('Please map at least one category to a Gmail label');
      return;
    }

    try {
      setSaving(true);
      setError(null);

      const token = localStorage.getItem('token');
      await axios.post(
        `${process.env.REACT_APP_API_URL}/onboarding/step/label-mapping`,
        { mappings: completeMappings },
        { headers: { Authorization: `Bearer ${token}` } }
      );

      onComplete({ labelMappings: completeMappings });
    } catch (error) {
      console.error('Error saving label mappings:', error);
      setError(error.response?.data?.message || 'Failed to save label mappings');
    } finally {
      setSaving(false);
    }
  };

  if (loading) {
    return (
      <div className='step-content'>
        <div className='loading-container'>
          <div className='loading-spinner' />
          <p>Loading your Gmail labels...</p>
        </div>
      </div>
    );
  }

  return (
    <div className='step-content'>
      <div className='step-description'>
        <h3>Map Categories to Gmail Labels</h3>
        <p>
          Connect your business categories to existing Gmail labels. This helps us automatically
          organize your emails.
        </p>
      </div>

      <div className='mapping-section'>
        <div className='mapping-list'>
          {mappings.map((mapping, index) => (
            <div key={index} className='mapping-item'>
              <div className='category-info'>
                <div className='category-name'>{mapping.categoryName}</div>
                <div className='category-arrow'>‚Üí</div>
              </div>

              <div className='label-selector'>
                <select
                  value={mapping.gmailLabelId}
                  onChange={e => {
                    const selectedLabel = gmailLabels.find(label => label.id === e.target.value);
                    updateMapping(
                      mapping.categoryName,
                      e.target.value,
                      selectedLabel ? selectedLabel.name : ''
                    );
                  }}
                  className='label-dropdown'
                >
                  <option value=''>Select Gmail Label</option>
                  {gmailLabels.map(label => (
                    <option key={label.id} value={label.id}>
                      {label.name} {label.messagesTotal ? `(${label.messagesTotal} emails)` : ''}
                    </option>
                  ))}
                </select>
              </div>
            </div>
          ))}
        </div>

        <div className='mapping-summary'>
          <h4>Mapping Summary</h4>
          <div className='summary-stats'>
            <div className='stat'>
              <span className='stat-number'>{mappings.length}</span>
              <span className='stat-label'>Categories</span>
            </div>
            <div className='stat'>
              <span className='stat-number'>{mappings.filter(m => m.gmailLabelId).length}</span>
              <span className='stat-label'>Mapped</span>
            </div>
            <div className='stat'>
              <span className='stat-number'>{gmailLabels.length}</span>
              <span className='stat-label'>Gmail Labels</span>
            </div>
          </div>
        </div>
      </div>

      {error && (
        <div className='error-message'>
          <span className='error-icon'>‚ö†Ô∏è</span>
          {error}
        </div>
      )}

      <div className='step-actions'>
        {canGoBack && (
          <button onClick={onBack} className='secondary-button'>
            Back
          </button>
        )}

        <button
          onClick={handleSave}
          disabled={saving || mappings.filter(m => m.gmailLabelId).length === 0}
          className='primary-button'
        >
          {saving ? (
            <>
              <div className='button-spinner' />
              Saving...
            </>
          ) : (
            'Continue to Team Setup'
          )}
        </button>
      </div>

      <div className='step-help'>
        <h5>üí° Tips for label mapping:</h5>
        <ul>
          <li>Use existing labels when possible to maintain your current organization</li>
          <li>You can create new labels in Gmail if needed</li>
          <li>Labels with more emails show higher activity</li>
          <li>You can always modify these mappings later</li>
        </ul>
      </div>
    </div>
  );
};

export default LabelMappingStep;
