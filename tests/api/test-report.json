{
  "startTime": "2025-09-01T02:34:33.577Z",
  "endTime": "2025-09-01T02:34:33.807Z",
  "environment": "Production",
  "baseURL": "https://floworx-app.vercel.app",
  "tests": [
    {
      "name": "system.test",
      "file": "./system.test.js",
      "status": "completed",
      "logs": [
        "\n📋 System and Health API Tests",
        "\n📋 GET /api/health",
        "  🧪 should return health status without authentication",
        "  🧪 should respond quickly for monitoring",
        "  🧪 should not expose sensitive system information",
        "\n📋 Database Connectivity Tests",
        "  🧪 should test database connectivity through API endpoints",
        "\n🗄️  Testing database connectivity through API...",
        "  🧪 should handle database connection failures gracefully",
        "\n📋 Environment Configuration Tests",
        "  🧪 should validate critical environment variables through API behavior",
        "\n⚙️  Testing environment configuration...",
        "  🧪 should handle missing environment variables gracefully",
        "\n📋 Error Response Tests",
        "  🧪 should return proper 401 Unauthorized responses",
        "  🧪 should return proper 404 Not Found responses",
        "  🧪 should handle 500 Internal Server Error responses",
        "\n📋 API Security Tests",
        "  🧪 should implement proper CORS headers",
        "  🧪 should implement security headers",
        "  🧪 should not expose server information"
      ],
      "timestamp": "2025-09-01T02:34:33.707Z"
    },
    {
      "name": "auth.test",
      "file": "./auth.test.js",
      "status": "completed",
      "logs": [
        "\n📋 Authentication API Tests",
        "\n📋 POST /api/auth/register",
        "  🧪 should register user with valid data",
        "  🧪 should reject registration with invalid email",
        "  🧪 should reject registration with weak password",
        "  🧪 should reject registration with missing required fields",
        "  🧪 should reject duplicate email registration",
        "\n📋 POST /api/auth/login",
        "  🧪 should login with valid credentials",
        "  🧪 should reject login with invalid email",
        "  🧪 should reject login with incorrect password",
        "  🧪 should reject login with missing credentials",
        "\n📋 POST /api/auth/logout",
        "  🧪 should logout authenticated user",
        "  🧪 should handle logout without authentication",
        "\n📋 JWT Token Validation",
        "  🧪 should accept valid JWT token",
        "  🧪 should reject invalid JWT token",
        "  🧪 should reject malformed authorization header",
        "  🧪 should handle missing authorization header",
        "\n📋 Authentication Security",
        "  🧪 should implement rate limiting on login attempts",
        "  🧪 should not expose sensitive information in error messages"
      ],
      "timestamp": "2025-09-01T02:34:33.739Z"
    },
    {
      "name": "oauth.test",
      "file": "./oauth.test.js",
      "status": "completed",
      "logs": [
        "\n📋 OAuth API Tests",
        "\n📋 GET /api/oauth/google",
        "  🧪 should initiate OAuth without requiring authentication",
        "  🧪 should not expose sensitive information",
        "  🧪 should handle OAuth configuration errors gracefully",
        "\n📋 POST /api/oauth/callback",
        "  🧪 should handle OAuth callback with valid code",
        "  🧪 should reject callback without code",
        "  🧪 should handle invalid OAuth code gracefully",
        "\n📋 OAuth Configuration Validation",
        "  🧪 should have proper redirect URI configuration",
        "  🧪 should validate OAuth security headers",
        "\n📋 OAuth Error Handling",
        "  🧪 should provide user-friendly error messages",
        "\n  Testing: Missing OAuth configuration",
        "  🧪 should handle OAuth service unavailability",
        "\n📋 OAuth Integration Flow",
        "  🧪 should support complete OAuth flow simulation",
        "\n🔄 OAuth Flow Simulation:",
        "   1. Initiating OAuth..."
      ],
      "timestamp": "2025-09-01T02:34:33.756Z"
    },
    {
      "name": "user.test",
      "file": "./user.test.js",
      "status": "completed",
      "logs": [
        "\n📋 User Management API Tests",
        "\n📋 GET /api/user/status",
        "  🧪 should return user status with valid authentication",
        "  🧪 should reject request without authentication",
        "  🧪 should reject request with invalid token",
        "  🧪 should handle malformed authorization header",
        "\n📋 PUT /api/user/profile",
        "  🧪 should update user profile with valid data",
        "  🧪 should reject profile update without authentication",
        "  🧪 should validate profile update data",
        "\n📋 Authentication vs Unauthenticated Access",
        "  🧪 should properly distinguish authenticated vs unauthenticated requests",
        "\n  Testing User Status:",
        "  🧪 should handle token expiration gracefully",
        "\n📋 User Data Security",
        "  🧪 should not expose sensitive user information",
        "  🧪 should validate user ownership of data",
        "\n📋 Error Handling and User Experience",
        "  🧪 should provide helpful error messages for common issues",
        "\n  Testing: No authentication"
      ],
      "timestamp": "2025-09-01T02:34:33.775Z"
    },
    {
      "name": "dashboard.test",
      "file": "./dashboard.test.js",
      "status": "completed",
      "logs": [
        "\n📋 Dashboard API Tests",
        "\n📋 GET /api/dashboard",
        "  🧪 should return dashboard data with valid authentication",
        "  🧪 should reject request without authentication",
        "  🧪 should reject request with invalid token",
        "\n📋 Dashboard Data Loading",
        "  🧪 should load user-specific dashboard data",
        "  🧪 should handle missing or incomplete user data gracefully",
        "\n📋 Dashboard Performance",
        "  🧪 should respond within reasonable time",
        "  🧪 should handle concurrent dashboard requests",
        "\n📋 Dashboard Error Handling",
        "  🧪 should provide user-friendly error messages",
        "\n  Testing: No authentication",
        "  🧪 should not expose sensitive system information",
        "\n📋 Dashboard Integration",
        "  🧪 should integrate with user authentication system",
        "  🧪 should handle OAuth connection status"
      ],
      "timestamp": "2025-09-01T02:34:33.795Z"
    },
    {
      "name": "integration.test",
      "file": "./integration.test.js",
      "status": "completed",
      "logs": [
        "\n📋 Integration API Tests",
        "\n📋 Complete User Registration → Login → Dashboard Flow",
        "  🧪 should complete full user onboarding flow",
        "\n🔄 Testing Complete User Onboarding Flow...",
        "   1️⃣ User Registration...",
        "\n📋 OAuth Connection → User Status → Dashboard Flow",
        "  🧪 should test OAuth integration flow",
        "\n🔐 Testing OAuth Integration Flow...",
        "   1️⃣ OAuth Initiation...",
        "\n📋 API Rate Limiting and Security",
        "  🧪 should test API rate limiting behavior",
        "\n🛡️  Testing API Rate Limiting...",
        "  🧪 should test authentication security across endpoints",
        "\n🔐 Testing Authentication Security...",
        "   Testing User Status...",
        "\n📋 System Integration Health Check",
        "  🧪 should perform comprehensive system health check",
        "\n🏥 Comprehensive System Health Check...",
        "   🔍 API Health..."
      ],
      "timestamp": "2025-09-01T02:34:33.807Z"
    }
  ],
  "summary": {
    "total": 0,
    "passed": 0,
    "failed": 0,
    "errors": []
  },
  "metadata": {
    "nodeVersion": "v24.7.0",
    "platform": "win32",
    "testRunner": "FloWorx API Test Suite v1.0",
    "configuredEnvironment": "production"
  },
  "recommendations": [
    "Fix OAuth authentication requirement",
    "Update production OAuth redirect URIs",
    "Resolve user status endpoint authentication",
    "Test complete user registration flow",
    "Implement proper error handling"
  ],
  "criticalIssues": [
    "OAuth initiation incorrectly requires authentication",
    "User status endpoint authentication failing",
    "Production OAuth redirect URI configuration needed"
  ]
}