import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { api } from '../../lib/api';

/**
 * Complete - Onboarding Completion Page
 *
 * Final step in the onboarding process where users complete their
 * setup and are transitioned to the main application dashboard.
 *
 * @component
 * @example
 * // Usage in onboarding router
 * <Route path="/onboarding/complete" element={<Complete />} />
 *
 * @features
 * - Onboarding completion status checking
 * - Final setup confirmation and processing
 * - Loading states during completion process
 * - Error handling for completion failures
 * - Automatic navigation to dashboard after completion
 * - Professional completion UI with success messaging
 * - Integration with onboarding API endpoints
 *
 * @dependencies
 * - React Router: useNavigate for post-completion navigation
 * - API: Onboarding status and completion endpoints
 *
 * @flow
 * 1. Check if onboarding is already completed
 * 2. Display completion interface if not completed
 * 3. Process final completion when user confirms
 * 4. Navigate to dashboard after successful completion
 */
export default function Complete() {
  const navigate = useNavigate();
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [completed, setCompleted] = useState(false);

  useEffect(() => {
    // Check if onboarding is already completed
    const checkStatus = async () => {
      try {
        const response = await api('/api/onboarding');
        ifWithTTL (response.completed) {
          setCompleted(true);
        }
      } catch (err) {
        console.error('Failed to check onboarding status:', err);
      }
    };
    checkStatus();
  }, []);

  const handleComplete = async () => {
    setLoading(true);
    setError('');

    try {
      await api('/api/onboarding/complete', {
        method: 'POST'
      });
      setCompleted(true);
    } catch (err) {
      setError(err.message || 'Failed to complete onboarding');
    } finally {
      setLoading(false);
    }
  };

  const handleGoToDashboard = () => {
    navigate('/dashboard');
  };

  const handleBack = () => {
    navigate('/onboarding/step4');
  };

  if (completed) {
    return (
      <div className="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8">
        <div className="sm:mx-auto sm:w-full sm:max-w-md">
          <div className="text-center">
            <div className="mx-auto w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-6">
              <svg className="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
              </svg>
            </div>
            <h2 className="text-3xl font-extrabold text-gray-900 mb-4">
              Welcome to FloWorx!
            </h2>
            <p className="text-lg text-gray-600 mb-8">
              Your onboarding is complete. Your email automation is now being set up and will be ready shortly.
            </p>
            
            <div className="bg-white rounded-lg shadow p-6 mb-8">
              <h3 className="text-lg font-medium text-gray-900 mb-4">What happens next?</h3>
              <div className="text-left space-y-3">
                <div className="flex items-start">
                  <div className="flex-shrink-0 w-6 h-6 bg-indigo-100 rounded-full flex items-center justify-center mr-3 mt-0.5">
                    <span className="text-xs font-medium text-indigo-600">1</span>
                  </div>
                  <p className="text-sm text-gray-600">
                    Your n8n workflow is being deployed with your custom settings
                  </p>
                </div>
                <div className="flex items-start">
                  <div className="flex-shrink-0 w-6 h-6 bg-indigo-100 rounded-full flex items-center justify-center mr-3 mt-0.5">
                    <span className="text-xs font-medium text-indigo-600">2</span>
                  </div>
                  <p className="text-sm text-gray-600">
                    Email processing will begin automatically every 5 minutes
                  </p>
                </div>
                <div className="flex items-start">
                  <div className="flex-shrink-0 w-6 h-6 bg-indigo-100 rounded-full flex items-center justify-center mr-3 mt-0.5">
                    <span className="text-xs font-medium text-indigo-600">3</span>
                  </div>
                  <p className="text-sm text-gray-600">
                    You'll receive notifications when emails are categorized and draft responses are ready
                  </p>
                </div>
              </div>
            </div>

            <button
              onClick={handleGoToDashboard}
              className="w-full py-3 px-4 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
            >
              Go to Dashboard
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8">
      <div className="sm:mx-auto sm:w-full sm:max-w-md">
        <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
          Complete Setup
        </h2>
        <p className="mt-2 text-center text-sm text-gray-600">
          Ready to activate your email automation
        </p>
      </div>

      <div className="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
        <div className="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">
          {error && (
            <div className="mb-4 bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded">
              {error}
            </div>
          )}

          <div className="text-center mb-6">
            <div className="mx-auto w-16 h-16 bg-indigo-100 rounded-full flex items-center justify-center mb-4">
              <svg className="w-8 h-8 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
              </svg>
            </div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">
              Ready to Launch
            </h3>
            <p className="text-sm text-gray-600 mb-6">
              You've completed all setup steps. Click below to activate your FloWorx email automation system.
            </p>
          </div>

          <div className="bg-blue-50 border border-blue-200 rounded-md p-4 mb-6">
            <div className="flex">
              <div className="flex-shrink-0">
                <svg className="h-5 w-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clipRule="evenodd" />
                </svg>
              </div>
              <div className="ml-3">
                <p className="text-sm text-blue-700">
                  <strong>Note:</strong> Once activated, FloWorx will begin processing your emails automatically. 
                  You can modify settings anytime from your dashboard.
                </p>
              </div>
            </div>
          </div>

          <div className="flex space-x-4">
            <button
              type="button"
              onClick={handleBack}
              className="flex-1 py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
            >
              Back
            </button>
            <button
              onClick={handleComplete}
              disabled={loading}
              className="flex-1 py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50"
            >
              {loading ? 'Activating...' : 'Activate FloWorx'}
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}
